2024-03-11 19:23:53,131{GMT}	INFO	[jepsen test runner] jepsen.core: Command line:
lein run test -w unique-ids --bin maelstrom
2024-03-11 19:23:53,169{GMT}	INFO	[jepsen test runner] jepsen.core: Running test:
{:args []
 :remote
 #jepsen.control.retry.Remote{:remote #jepsen.control.scp.Remote{:cmd-remote #jepsen.control.sshj.SSHJRemote{:concurrency-limit 6,
                                                                                                             :conn-spec nil,
                                                                                                             :client nil,
                                                                                                             :semaphore nil},
                                                                 :conn-spec nil},
                              :conn nil}
 :log-net-send false
 :node-count nil
 :availability nil
 :max-txn-length 4
 :concurrency 5
 :db
 #object[maelstrom.db$db$reify__16142
         "0x1d957b5a"
         "maelstrom.db$db$reify__16142@1d957b5a"]
 :max-writes-per-key 16
 :leave-db-running? false
 :name "unique-ids"
 :logging-json? false
 :start-time
 #object[org.joda.time.DateTime "0x24bf95ec" "2024-03-11T19:23:53.112+08:00"]
 :nemesis-interval 10
 :net
 #object[maelstrom.net$jepsen_net$reify__15251
         "0x13ae0ffd"
         "maelstrom.net$jepsen_net$reify__15251@13ae0ffd"]
 :client
 #object[maelstrom.workload.unique_ids$client$reify__20074
         "0x2a71d430"
         "maelstrom.workload.unique_ids$client$reify__20074@2a71d430"]
 :barrier
 #object[java.util.concurrent.CyclicBarrier
         "0xb0c4670"
         "java.util.concurrent.CyclicBarrier@b0c4670"]
 :log-stderr false
 :pure-generators true
 :ssh {:dummy? true}
 :rate 5
 :checker
 #object[jepsen.checker$compose$reify__11881
         "0x5344b208"
         "jepsen.checker$compose$reify__11881@5344b208"]
 :argv ("test" "-w" "unique-ids" "--bin" "maelstrom")
 :nemesis
 (jepsen.nemesis.ReflCompose
  {:fm {:start-partition 0,
        :stop-partition 0,
        :kill 1,
        :start 1,
        :pause 1,
        :resume 1},
   :nemeses [#unprintable "jepsen.nemesis.combined$partition_nemesis$reify__16416@30769e7a"
             #unprintable "jepsen.nemesis.combined$db_nemesis$reify__16397@14021c10"]})
 :nodes ["n1" "n2" "n3" "n4" "n5"]
 :test-count 1
 :latency {:mean 0, :dist :constant}
 :bin "maelstrom"
 :generator
 (jepsen.generator.TimeLimit
  {:limit 60000000000,
   :cutoff nil,
   :gen (jepsen.generator.Any
         {:gens [(jepsen.generator.OnThreads
                  {:f #{:nemesis},
                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                           "0x656bd8e"
                                           "jepsen.generator.context$make_thread_filter$lazy_filter__9167@656bd8e"],
                   :gen nil})
                 (jepsen.generator.OnThreads
                  {:f #jepsen.generator.context.AllBut{:element :nemesis},
                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                           "0x7f336491"
                                           "jepsen.generator.context$make_thread_filter$lazy_filter__9167@7f336491"],
                   :gen (jepsen.generator.Stagger
                         {:dt 400000000,
                          :next-time nil,
                          :gen (jepsen.generator.Repeat
                                {:remaining -1, :gen {:f :generate}})})})]})})
 :log-net-recv false
 :os
 #object[maelstrom.net$jepsen_os$reify__15254
         "0x5dd2e62a"
         "maelstrom.net$jepsen_os$reify__15254@5dd2e62a"]
 :time-limit 60
 :workload :unique-ids
 :consistency-models [:strict-serializable]
 :topology :grid}

2024-03-11 19:23:53,984{GMT}	INFO	[jepsen node n1] maelstrom.net: Starting Maelstrom network
2024-03-11 19:23:53,985{GMT}	INFO	[jepsen test runner] jepsen.db: Tearing down DB
2024-03-11 19:23:53,986{GMT}	INFO	[jepsen test runner] jepsen.db: Setting up DB
2024-03-11 19:23:53,986{GMT}	INFO	[jepsen node n2] maelstrom.db: Setting up n2
2024-03-11 19:23:53,986{GMT}	INFO	[jepsen node n3] maelstrom.db: Setting up n3
2024-03-11 19:23:53,987{GMT}	INFO	[jepsen node n5] maelstrom.db: Setting up n5
2024-03-11 19:23:53,987{GMT}	INFO	[jepsen node n4] maelstrom.db: Setting up n4
2024-03-11 19:23:53,987{GMT}	INFO	[jepsen node n2] maelstrom.process: launching maelstrom []
2024-03-11 19:23:53,987{GMT}	INFO	[jepsen node n4] maelstrom.process: launching maelstrom []
2024-03-11 19:23:53,987{GMT}	INFO	[jepsen node n5] maelstrom.process: launching maelstrom []
2024-03-11 19:23:53,987{GMT}	INFO	[jepsen node n3] maelstrom.process: launching maelstrom []
2024-03-11 19:23:53,988{GMT}	INFO	[jepsen node n1] maelstrom.service: Starting services: (lin-kv lin-tso lww-kv seq-kv)
2024-03-11 19:23:53,989{GMT}	INFO	[jepsen node n1] maelstrom.db: Setting up n1
2024-03-11 19:23:53,989{GMT}	INFO	[jepsen node n1] maelstrom.process: launching maelstrom []
2024-03-11 19:23:58,643{GMT}	WARN	[n1 stdout] maelstrom.process: Error!
clojure.lang.ExceptionInfo: Node n1 printed a line to STDOUT which was not well-formed JSON:
Usage: lein run -- COMMAND [OPTIONS ...]
Did you mean to encode this line as JSON? Or was this line intended for STDERR? See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.process$parse_msg$fn__15856.invoke(process.clj:47)
	at maelstrom.process$parse_msg.invokeStatic(process.clj:45)
	at maelstrom.process$parse_msg.invoke(process.clj:35)
	at maelstrom.process$stdout_thread$fn__15878$fn__15879$fn__15881.invoke(process.clj:146)
	at maelstrom.process$stdout_thread$fn__15878$fn__15879.invoke(process.clj:146)
	at maelstrom.process$stdout_thread$fn__15878.invoke(process.clj:140)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-03-11 19:23:58,730{GMT}	WARN	[n2 stdout] maelstrom.process: Error!
clojure.lang.ExceptionInfo: Node n2 printed a line to STDOUT which was not well-formed JSON:
Usage: lein run -- COMMAND [OPTIONS ...]
Did you mean to encode this line as JSON? Or was this line intended for STDERR? See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.process$parse_msg$fn__15856.invoke(process.clj:47)
	at maelstrom.process$parse_msg.invokeStatic(process.clj:45)
	at maelstrom.process$parse_msg.invoke(process.clj:35)
	at maelstrom.process$stdout_thread$fn__15878$fn__15879$fn__15881.invoke(process.clj:146)
	at maelstrom.process$stdout_thread$fn__15878$fn__15879.invoke(process.clj:146)
	at maelstrom.process$stdout_thread$fn__15878.invoke(process.clj:140)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-03-11 19:23:58,773{GMT}	WARN	[n5 stdout] maelstrom.process: Error!
clojure.lang.ExceptionInfo: Node n5 printed a line to STDOUT which was not well-formed JSON:
Usage: lein run -- COMMAND [OPTIONS ...]
Did you mean to encode this line as JSON? Or was this line intended for STDERR? See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.process$parse_msg$fn__15856.invoke(process.clj:47)
	at maelstrom.process$parse_msg.invokeStatic(process.clj:45)
	at maelstrom.process$parse_msg.invoke(process.clj:35)
	at maelstrom.process$stdout_thread$fn__15878$fn__15879$fn__15881.invoke(process.clj:146)
	at maelstrom.process$stdout_thread$fn__15878$fn__15879.invoke(process.clj:146)
	at maelstrom.process$stdout_thread$fn__15878.invoke(process.clj:140)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-03-11 19:23:58,818{GMT}	WARN	[n3 stdout] maelstrom.process: Error!
clojure.lang.ExceptionInfo: Node n3 printed a line to STDOUT which was not well-formed JSON:
Usage: lein run -- COMMAND [OPTIONS ...]
Did you mean to encode this line as JSON? Or was this line intended for STDERR? See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.process$parse_msg$fn__15856.invoke(process.clj:47)
	at maelstrom.process$parse_msg.invokeStatic(process.clj:45)
	at maelstrom.process$parse_msg.invoke(process.clj:35)
	at maelstrom.process$stdout_thread$fn__15878$fn__15879$fn__15881.invoke(process.clj:146)
	at maelstrom.process$stdout_thread$fn__15878$fn__15879.invoke(process.clj:146)
	at maelstrom.process$stdout_thread$fn__15878.invoke(process.clj:140)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-03-11 19:23:59,015{GMT}	WARN	[n4 stdout] maelstrom.process: Error!
clojure.lang.ExceptionInfo: Node n4 printed a line to STDOUT which was not well-formed JSON:
Usage: lein run -- COMMAND [OPTIONS ...]
Did you mean to encode this line as JSON? Or was this line intended for STDERR? See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.process$parse_msg$fn__15856.invoke(process.clj:47)
	at maelstrom.process$parse_msg.invokeStatic(process.clj:45)
	at maelstrom.process$parse_msg.invoke(process.clj:35)
	at maelstrom.process$stdout_thread$fn__15878$fn__15879$fn__15881.invoke(process.clj:146)
	at maelstrom.process$stdout_thread$fn__15878$fn__15879.invoke(process.clj:146)
	at maelstrom.process$stdout_thread$fn__15878.invoke(process.clj:140)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-03-11 19:24:04,008{GMT}	INFO	[jepsen node n2] maelstrom.db: Tearing down n2
2024-03-11 19:24:04,008{GMT}	INFO	[jepsen node n3] maelstrom.db: Tearing down n3
2024-03-11 19:24:04,008{GMT}	INFO	[jepsen node n4] maelstrom.db: Tearing down n4
2024-03-11 19:24:04,008{GMT}	INFO	[jepsen node n5] maelstrom.db: Tearing down n5
2024-03-11 19:24:04,008{GMT}	INFO	[jepsen node n1] maelstrom.db: Tearing down n1
2024-03-11 19:24:05,010{GMT}	INFO	[jepsen node n1] maelstrom.net: Shutting down Maelstrom network
2024-03-11 19:24:05,015{GMT}	WARN	[jepsen test runner] jepsen.core: Test crashed!
clojure.lang.ExceptionInfo: Node n2 crashed with exit status 254. Before crashing, it wrote to STDOUT:



And to STDERR:

WARNING: abs already refers to: #'clojure.core/abs in namespace: clojure.core.matrix.impl.mathsops, being replaced by: #'clojure.core.matrix.impl.mathsops/abs
Warning: protocol #'clojure.core.matrix.protocols/PMathsFunctions is overwriting function abs
WARNING: abs already refers to: #'clojure.core/abs in namespace: clojure.core.matrix.protocols, being replaced by: #'clojure.core.matrix.protocols/abs
WARNING: abs already refers to: #'clojure.core/abs in namespace: clojure.core.matrix, being replaced by: #'clojure.core.matrix/abs
WARNING: abs already refers to: #'clojure.core/abs in namespace: clojure.core.matrix.dataset, being replaced by: #'clojure.core.matrix/abs
WARNING: abs already refers to: #'clojure.core/abs in namespace: incanter.core, being replaced by: #'incanter.core/abs

Full STDERR logs are available in /Users/lihaoyang/maelstrom/store/unique-ids/20240311T192353.112+0800/node-logs/n2.log
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.process$stop_node_BANG_.invokeStatic(process.clj:239)
	at maelstrom.process$stop_node_BANG_.invoke(process.clj:217)
	at maelstrom.db$db$reify__16142.teardown_BANG_(db.clj:75)
	at jepsen.db$fn__8744$G__8725__8748.invoke(db.clj:12)
	at jepsen.db$fn__8744$G__8724__8753.invoke(db.clj:12)
	at clojure.core$partial$fn__5908.invoke(core.clj:2642)
	at jepsen.control$on_nodes$fn__8599.invoke(control.clj:314)
	at clojure.lang.AFn.applyToHelper(AFn.java:154)
	at clojure.lang.AFn.applyTo(AFn.java:144)
	at clojure.core$apply.invokeStatic(core.clj:667)
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1990)
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1990)
	at clojure.lang.RestFn.applyTo(RestFn.java:142)
	at clojure.core$apply.invokeStatic(core.clj:671)
	at clojure.core$bound_fn_STAR_$fn__5818.doInvoke(core.clj:2020)
	at clojure.lang.RestFn.invoke(RestFn.java:408)
	at dom_top.core$real_pmap_helper$build_thread__211$fn__212.invoke(core.clj:163)
	at clojure.lang.AFn.applyToHelper(AFn.java:152)
	at clojure.lang.AFn.applyTo(AFn.java:144)
	at clojure.core$apply.invokeStatic(core.clj:667)
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1990)
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1990)
	at clojure.lang.RestFn.invoke(RestFn.java:425)
	at clojure.lang.AFn.applyToHelper(AFn.java:156)
	at clojure.lang.RestFn.applyTo(RestFn.java:132)
	at clojure.core$apply.invokeStatic(core.clj:671)
	at clojure.core$bound_fn_STAR_$fn__5818.doInvoke(core.clj:2020)
	at clojure.lang.RestFn.invoke(RestFn.java:397)
	at clojure.lang.AFn.run(AFn.java:22)
	at java.base/java.lang.Thread.run(Thread.java:1583)
