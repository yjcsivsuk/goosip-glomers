2024-02-27 15:57:00,630{GMT}	INFO	[jepsen test runner] jepsen.core: Command line:
lein run test -w echo --bin demo/ruby/echo.rb --time-limit 5
2024-02-27 15:57:00,661{GMT}	INFO	[jepsen test runner] jepsen.core: Running test:
{:args []
 :remote
 #jepsen.control.retry.Remote{:remote #jepsen.control.scp.Remote{:cmd-remote #jepsen.control.sshj.SSHJRemote{:concurrency-limit 6,
                                                                                                             :conn-spec nil,
                                                                                                             :client nil,
                                                                                                             :semaphore nil},
                                                                 :conn-spec nil},
                              :conn nil}
 :log-net-send false
 :node-count nil
 :availability nil
 :max-txn-length 4
 :concurrency 5
 :db
 #object[maelstrom.db$db$reify__16142
         "0x13ae0ffd"
         "maelstrom.db$db$reify__16142@13ae0ffd"]
 :max-writes-per-key 16
 :leave-db-running? false
 :name "echo"
 :logging-json? false
 :start-time
 #object[org.joda.time.DateTime "0x30769e7a" "2024-02-27T15:57:00.584+08:00"]
 :nemesis-interval 10
 :net
 #object[maelstrom.net$jepsen_net$reify__15251
         "0x14021c10"
         "maelstrom.net$jepsen_net$reify__15251@14021c10"]
 :client
 #object[maelstrom.workload.echo$client$reify__16863
         "0x7dd4f726"
         "maelstrom.workload.echo$client$reify__16863@7dd4f726"]
 :barrier
 #object[java.util.concurrent.CyclicBarrier
         "0xbf6de66"
         "java.util.concurrent.CyclicBarrier@bf6de66"]
 :log-stderr false
 :pure-generators true
 :ssh {:dummy? true}
 :rate 5
 :checker
 #object[jepsen.checker$compose$reify__11881
         "0xff7042c"
         "jepsen.checker$compose$reify__11881@ff7042c"]
 :argv ("test" "-w" "echo" "--bin" "demo/ruby/echo.rb" "--time-limit" "5")
 :nemesis
 (jepsen.nemesis.ReflCompose
  {:fm {:start-partition 0,
        :stop-partition 0,
        :kill 1,
        :start 1,
        :pause 1,
        :resume 1},
   :nemeses [#unprintable "jepsen.nemesis.combined$partition_nemesis$reify__16416@b917b5e"
             #unprintable "jepsen.nemesis.combined$db_nemesis$reify__16397@5126c0cd"]})
 :nodes ["n1" "n2" "n3" "n4" "n5"]
 :test-count 1
 :latency {:mean 0, :dist :constant}
 :bin "demo/ruby/echo.rb"
 :generator
 (jepsen.generator.TimeLimit
  {:limit 5000000000,
   :cutoff nil,
   :gen (jepsen.generator.Any
         {:gens [(jepsen.generator.OnThreads
                  {:f #{:nemesis},
                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                           "0x74c3374f"
                                           "jepsen.generator.context$make_thread_filter$lazy_filter__9167@74c3374f"],
                   :gen nil})
                 (jepsen.generator.OnThreads
                  {:f #jepsen.generator.context.AllBut{:element :nemesis},
                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                           "0x3eea7c4b"
                                           "jepsen.generator.context$make_thread_filter$lazy_filter__9167@3eea7c4b"],
                   :gen (jepsen.generator.Stagger
                         {:dt 400000000,
                          :next-time nil,
                          :gen (jepsen.generator.EachThread
                                {:fresh-gen #object[maelstrom.workload.echo$workload$fn__16882
                                                    "0x50d507ab"
                                                    "maelstrom.workload.echo$workload$fn__16882@50d507ab"],
                                 :context-filters #object[clojure.core$promise$reify__8591
                                                          "0x460222eb"
                                                          {:status :pending,
                                                           :val nil}],
                                 :gens {}})})})]})})
 :log-net-recv false
 :os
 #object[maelstrom.net$jepsen_os$reify__15254
         "0x2b960c2b"
         "maelstrom.net$jepsen_os$reify__15254@2b960c2b"]
 :time-limit 5
 :workload :echo
 :consistency-models [:strict-serializable]
 :topology :grid}

2024-02-27 15:57:01,604{GMT}	INFO	[jepsen node n1] maelstrom.net: Starting Maelstrom network
2024-02-27 15:57:01,606{GMT}	INFO	[jepsen test runner] jepsen.db: Tearing down DB
2024-02-27 15:57:01,608{GMT}	INFO	[jepsen test runner] jepsen.db: Setting up DB
2024-02-27 15:57:01,609{GMT}	INFO	[jepsen node n4] maelstrom.db: Setting up n4
2024-02-27 15:57:01,609{GMT}	INFO	[jepsen node n3] maelstrom.db: Setting up n3
2024-02-27 15:57:01,609{GMT}	INFO	[jepsen node n3] maelstrom.process: launching demo/ruby/echo.rb []
2024-02-27 15:57:01,609{GMT}	INFO	[jepsen node n2] maelstrom.db: Setting up n2
2024-02-27 15:57:01,609{GMT}	INFO	[jepsen node n4] maelstrom.process: launching demo/ruby/echo.rb []
2024-02-27 15:57:01,610{GMT}	INFO	[jepsen node n5] maelstrom.db: Setting up n5
2024-02-27 15:57:01,610{GMT}	INFO	[jepsen node n2] maelstrom.process: launching demo/ruby/echo.rb []
2024-02-27 15:57:01,610{GMT}	INFO	[jepsen node n5] maelstrom.process: launching demo/ruby/echo.rb []
2024-02-27 15:57:01,612{GMT}	INFO	[jepsen node n1] maelstrom.service: Starting services: (lin-kv lin-tso lww-kv seq-kv)
2024-02-27 15:57:01,618{GMT}	INFO	[jepsen node n1] maelstrom.db: Setting up n1
2024-02-27 15:57:01,618{GMT}	INFO	[jepsen node n1] maelstrom.process: launching demo/ruby/echo.rb []
2024-02-27 15:57:02,313{GMT}	INFO	[jepsen test runner] jepsen.core: Relative time begins now
2024-02-27 15:57:02,322{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:echo	"Please echo 76"
2024-02-27 15:57:02,325{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:echo	{:type "echo_ok", :echo "Please echo 76", :msg_id 2, :in_reply_to 1}
2024-02-27 15:57:02,497{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 58"
2024-02-27 15:57:02,498{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:type "echo_ok", :echo "Please echo 58", :msg_id 2, :in_reply_to 1}
2024-02-27 15:57:02,847{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:echo	"Please echo 120"
2024-02-27 15:57:02,848{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:echo	{:type "echo_ok", :echo "Please echo 120", :msg_id 2, :in_reply_to 1}
2024-02-27 15:57:03,183{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:echo	"Please echo 93"
2024-02-27 15:57:03,184{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:echo	{:type "echo_ok", :echo "Please echo 93", :msg_id 3, :in_reply_to 2}
2024-02-27 15:57:03,215{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:echo	"Please echo 57"
2024-02-27 15:57:03,216{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:echo	{:type "echo_ok", :echo "Please echo 57", :msg_id 2, :in_reply_to 1}
2024-02-27 15:57:03,241{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:echo	"Please echo 35"
2024-02-27 15:57:03,242{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:echo	{:type "echo_ok", :echo "Please echo 35", :msg_id 4, :in_reply_to 3}
2024-02-27 15:57:03,479{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 51"
2024-02-27 15:57:03,480{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:type "echo_ok", :echo "Please echo 51", :msg_id 3, :in_reply_to 2}
2024-02-27 15:57:03,688{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:echo	"Please echo 104"
2024-02-27 15:57:03,688{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:echo	{:type "echo_ok", :echo "Please echo 104", :msg_id 3, :in_reply_to 2}
2024-02-27 15:57:03,966{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:echo	"Please echo 28"
2024-02-27 15:57:03,967{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:echo	{:type "echo_ok", :echo "Please echo 28", :msg_id 4, :in_reply_to 3}
2024-02-27 15:57:04,045{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 22"
2024-02-27 15:57:04,045{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:type "echo_ok", :echo "Please echo 22", :msg_id 4, :in_reply_to 3}
2024-02-27 15:57:04,099{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:echo	"Please echo 120"
2024-02-27 15:57:04,100{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:echo	{:type "echo_ok", :echo "Please echo 120", :msg_id 2, :in_reply_to 1}
2024-02-27 15:57:04,492{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:echo	"Please echo 7"
2024-02-27 15:57:04,493{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:echo	{:type "echo_ok", :echo "Please echo 7", :msg_id 5, :in_reply_to 4}
2024-02-27 15:57:04,743{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:echo	"Please echo 59"
2024-02-27 15:57:04,743{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:echo	{:type "echo_ok", :echo "Please echo 59", :msg_id 5, :in_reply_to 4}
2024-02-27 15:57:05,002{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:echo	"Please echo 54"
2024-02-27 15:57:05,003{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:echo	{:type "echo_ok", :echo "Please echo 54", :msg_id 6, :in_reply_to 5}
2024-02-27 15:57:05,321{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:echo	"Please echo 7"
2024-02-27 15:57:05,322{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:echo	{:type "echo_ok", :echo "Please echo 7", :msg_id 6, :in_reply_to 5}
2024-02-27 15:57:05,346{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 102"
2024-02-27 15:57:05,347{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:type "echo_ok", :echo "Please echo 102", :msg_id 5, :in_reply_to 4}
2024-02-27 15:57:05,392{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 21"
2024-02-27 15:57:05,393{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:type "echo_ok", :echo "Please echo 21", :msg_id 6, :in_reply_to 5}
2024-02-27 15:57:05,653{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 40"
2024-02-27 15:57:05,653{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:type "echo_ok", :echo "Please echo 40", :msg_id 7, :in_reply_to 6}
2024-02-27 15:57:05,716{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:echo	"Please echo 71"
2024-02-27 15:57:05,717{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:echo	{:type "echo_ok", :echo "Please echo 71", :msg_id 7, :in_reply_to 6}
2024-02-27 15:57:05,918{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:echo	"Please echo 40"
2024-02-27 15:57:05,919{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:echo	{:type "echo_ok", :echo "Please echo 40", :msg_id 3, :in_reply_to 2}
2024-02-27 15:57:06,180{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:echo	"Please echo 30"
2024-02-27 15:57:06,181{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:echo	{:type "echo_ok", :echo "Please echo 30", :msg_id 7, :in_reply_to 6}
2024-02-27 15:57:06,235{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:echo	"Please echo 108"
2024-02-27 15:57:06,236{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:echo	{:type "echo_ok", :echo "Please echo 108", :msg_id 3, :in_reply_to 2}
2024-02-27 15:57:06,266{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:echo	"Please echo 77"
2024-02-27 15:57:06,267{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:echo	{:type "echo_ok", :echo "Please echo 77", :msg_id 8, :in_reply_to 7}
2024-02-27 15:57:06,482{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:echo	"Please echo 58"
2024-02-27 15:57:06,483{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:echo	{:type "echo_ok", :echo "Please echo 58", :msg_id 8, :in_reply_to 7}
2024-02-27 15:57:06,856{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:echo	"Please echo 90"
2024-02-27 15:57:06,857{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:echo	{:type "echo_ok", :echo "Please echo 90", :msg_id 4, :in_reply_to 3}
2024-02-27 15:57:07,193{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:echo	"Please echo 122"
2024-02-27 15:57:07,194{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:echo	{:type "echo_ok", :echo "Please echo 122", :msg_id 9, :in_reply_to 8}
2024-02-27 15:57:07,206{GMT}	INFO	[jepsen test runner] jepsen.core: Run complete, writing
2024-02-27 15:57:07,230{GMT}	INFO	[jepsen node n2] maelstrom.db: Tearing down n2
2024-02-27 15:57:07,230{GMT}	INFO	[jepsen node n1] maelstrom.db: Tearing down n1
2024-02-27 15:57:07,230{GMT}	INFO	[jepsen node n3] maelstrom.db: Tearing down n3
2024-02-27 15:57:07,231{GMT}	INFO	[jepsen node n4] maelstrom.db: Tearing down n4
2024-02-27 15:57:07,234{GMT}	INFO	[jepsen node n5] maelstrom.db: Tearing down n5
2024-02-27 15:57:08,652{GMT}	INFO	[jepsen node n1] maelstrom.net: Shutting down Maelstrom network
2024-02-27 15:57:08,653{GMT}	INFO	[jepsen test runner] jepsen.core: Analyzing...
2024-02-27 15:57:09,463{GMT}	INFO	[jepsen test runner] jepsen.core: Analysis complete
2024-02-27 15:57:09,467{GMT}	INFO	[jepsen results] jepsen.store: Wrote /Users/lihaoyang/maelstrom/store/echo/20240227T155700.584+0800/results.edn
2024-02-27 15:57:09,519{GMT}	INFO	[jepsen test runner] jepsen.core: {:perf {:latency-graph {:valid? true},
        :rate-graph {:valid? true},
        :valid? true},
 :timeline {:valid? true},
 :exceptions {:valid? true},
 :stats {:valid? true,
         :count 26,
         :ok-count 26,
         :fail-count 0,
         :info-count 0,
         :by-f {:echo {:valid? true,
                       :count 26,
                       :ok-count 26,
                       :fail-count 0,
                       :info-count 0}}},
 :availability {:valid? true, :ok-fraction 1.0},
 :net {:all {:send-count 62,
             :recv-count 62,
             :msg-count 62,
             :msgs-per-op 2.3846154},
       :clients {:send-count 62, :recv-count 62, :msg-count 62},
       :servers {:send-count 0,
                 :recv-count 0,
                 :msg-count 0,
                 :msgs-per-op 0.0},
       :valid? true},
 :workload {:valid? true, :errors ()},
 :valid? true}


Everything looks good! ヽ(‘ー`)ノ
