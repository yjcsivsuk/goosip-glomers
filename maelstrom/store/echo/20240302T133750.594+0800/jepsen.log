2024-03-02 13:37:50,614{GMT}	INFO	[jepsen test runner] jepsen.core: Command line:
lein run test -w echo --bin demo/ruby/echo.rb --time-limit 5
2024-03-02 13:37:50,651{GMT}	INFO	[jepsen test runner] jepsen.core: Running test:
{:args []
 :remote
 #jepsen.control.retry.Remote{:remote #jepsen.control.scp.Remote{:cmd-remote #jepsen.control.sshj.SSHJRemote{:concurrency-limit 6,
                                                                                                             :conn-spec nil,
                                                                                                             :client nil,
                                                                                                             :semaphore nil},
                                                                 :conn-spec nil},
                              :conn nil}
 :log-net-send false
 :node-count nil
 :availability nil
 :max-txn-length 4
 :concurrency 5
 :db
 #object[maelstrom.db$db$reify__16142
         "0x24bf95ec"
         "maelstrom.db$db$reify__16142@24bf95ec"]
 :max-writes-per-key 16
 :leave-db-running? false
 :name "echo"
 :logging-json? false
 :start-time
 #object[org.joda.time.DateTime "0x5344b208" "2024-03-02T13:37:50.594+08:00"]
 :nemesis-interval 10
 :net
 #object[maelstrom.net$jepsen_net$reify__15251
         "0x30769e7a"
         "maelstrom.net$jepsen_net$reify__15251@30769e7a"]
 :client
 #object[maelstrom.workload.echo$client$reify__16863
         "0x14021c10"
         "maelstrom.workload.echo$client$reify__16863@14021c10"]
 :barrier
 #object[java.util.concurrent.CyclicBarrier
         "0x7dd4f726"
         "java.util.concurrent.CyclicBarrier@7dd4f726"]
 :log-stderr false
 :pure-generators true
 :ssh {:dummy? true}
 :rate 5
 :checker
 #object[jepsen.checker$compose$reify__11881
         "0xbf6de66"
         "jepsen.checker$compose$reify__11881@bf6de66"]
 :argv ("test" "-w" "echo" "--bin" "demo/ruby/echo.rb" "--time-limit" "5")
 :nemesis
 (jepsen.nemesis.ReflCompose
  {:fm {:start-partition 0,
        :stop-partition 0,
        :kill 1,
        :start 1,
        :pause 1,
        :resume 1},
   :nemeses [#unprintable "jepsen.nemesis.combined$partition_nemesis$reify__16416@ff7042c"
             #unprintable "jepsen.nemesis.combined$db_nemesis$reify__16397@b917b5e"]})
 :nodes ["n1" "n2" "n3" "n4" "n5"]
 :test-count 1
 :latency {:mean 0, :dist :constant}
 :bin "demo/ruby/echo.rb"
 :generator
 (jepsen.generator.TimeLimit
  {:limit 5000000000,
   :cutoff nil,
   :gen (jepsen.generator.Any
         {:gens [(jepsen.generator.OnThreads
                  {:f #{:nemesis},
                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                           "0x1030ce34"
                                           "jepsen.generator.context$make_thread_filter$lazy_filter__9167@1030ce34"],
                   :gen nil})
                 (jepsen.generator.OnThreads
                  {:f #jepsen.generator.context.AllBut{:element :nemesis},
                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                           "0x74c3374f"
                                           "jepsen.generator.context$make_thread_filter$lazy_filter__9167@74c3374f"],
                   :gen (jepsen.generator.Stagger
                         {:dt 400000000,
                          :next-time nil,
                          :gen (jepsen.generator.EachThread
                                {:fresh-gen #object[maelstrom.workload.echo$workload$fn__16882
                                                    "0x3eea7c4b"
                                                    "maelstrom.workload.echo$workload$fn__16882@3eea7c4b"],
                                 :context-filters #object[clojure.core$promise$reify__8591
                                                          "0x50d507ab"
                                                          {:status :pending,
                                                           :val nil}],
                                 :gens {}})})})]})})
 :log-net-recv false
 :os
 #object[maelstrom.net$jepsen_os$reify__15254
         "0x460222eb"
         "maelstrom.net$jepsen_os$reify__15254@460222eb"]
 :time-limit 5
 :workload :echo
 :consistency-models [:strict-serializable]
 :topology :grid}

2024-03-02 13:37:51,534{GMT}	INFO	[jepsen node n1] maelstrom.net: Starting Maelstrom network
2024-03-02 13:37:51,534{GMT}	INFO	[jepsen test runner] jepsen.db: Tearing down DB
2024-03-02 13:37:51,535{GMT}	INFO	[jepsen test runner] jepsen.db: Setting up DB
2024-03-02 13:37:51,535{GMT}	INFO	[jepsen node n2] maelstrom.db: Setting up n2
2024-03-02 13:37:51,535{GMT}	INFO	[jepsen node n3] maelstrom.db: Setting up n3
2024-03-02 13:37:51,535{GMT}	INFO	[jepsen node n5] maelstrom.db: Setting up n5
2024-03-02 13:37:51,536{GMT}	INFO	[jepsen node n4] maelstrom.db: Setting up n4
2024-03-02 13:37:51,536{GMT}	INFO	[jepsen node n4] maelstrom.process: launching demo/ruby/echo.rb []
2024-03-02 13:37:51,536{GMT}	INFO	[jepsen node n3] maelstrom.process: launching demo/ruby/echo.rb []
2024-03-02 13:37:51,536{GMT}	INFO	[jepsen node n5] maelstrom.process: launching demo/ruby/echo.rb []
2024-03-02 13:37:51,536{GMT}	INFO	[jepsen node n2] maelstrom.process: launching demo/ruby/echo.rb []
2024-03-02 13:37:51,537{GMT}	INFO	[jepsen node n1] maelstrom.service: Starting services: (lin-kv lin-tso lww-kv seq-kv)
2024-03-02 13:37:51,538{GMT}	INFO	[jepsen node n1] maelstrom.db: Setting up n1
2024-03-02 13:37:51,539{GMT}	INFO	[jepsen node n1] maelstrom.process: launching demo/ruby/echo.rb []
2024-03-02 13:37:51,638{GMT}	INFO	[jepsen test runner] jepsen.core: Relative time begins now
2024-03-02 13:37:51,646{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:echo	"Please echo 76"
2024-03-02 13:37:51,650{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:echo	{:type "echo_ok", :echo "Please echo 76", :msg_id 2, :in_reply_to 1}
2024-03-02 13:37:51,785{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:echo	"Please echo 121"
2024-03-02 13:37:51,786{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:echo	{:type "echo_ok", :echo "Please echo 121", :msg_id 3, :in_reply_to 2}
2024-03-02 13:37:52,079{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:echo	"Please echo 51"
2024-03-02 13:37:52,084{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:echo	{:type "echo_ok", :echo "Please echo 51", :msg_id 2, :in_reply_to 1}
2024-03-02 13:37:52,430{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:echo	"Please echo 5"
2024-03-02 13:37:52,433{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:echo	{:type "echo_ok", :echo "Please echo 5", :msg_id 3, :in_reply_to 2}
2024-03-02 13:37:52,626{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:echo	"Please echo 59"
2024-03-02 13:37:52,630{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:echo	{:type "echo_ok", :echo "Please echo 59", :msg_id 2, :in_reply_to 1}
2024-03-02 13:37:52,924{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:echo	"Please echo 14"
2024-03-02 13:37:52,928{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:echo	{:type "echo_ok", :echo "Please echo 14", :msg_id 4, :in_reply_to 3}
2024-03-02 13:37:53,256{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 77"
2024-03-02 13:37:53,261{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:type "echo_ok", :echo "Please echo 77", :msg_id 2, :in_reply_to 1}
2024-03-02 13:37:53,588{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:echo	"Please echo 17"
2024-03-02 13:37:53,593{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:echo	{:type "echo_ok", :echo "Please echo 17", :msg_id 2, :in_reply_to 1}
2024-03-02 13:37:53,853{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 82"
2024-03-02 13:37:53,855{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:type "echo_ok", :echo "Please echo 82", :msg_id 3, :in_reply_to 2}
2024-03-02 13:37:53,958{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:echo	"Please echo 49"
2024-03-02 13:37:53,961{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:echo	{:type "echo_ok", :echo "Please echo 49", :msg_id 3, :in_reply_to 2}
2024-03-02 13:37:54,005{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:echo	"Please echo 109"
2024-03-02 13:37:54,007{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:echo	{:type "echo_ok", :echo "Please echo 109", :msg_id 4, :in_reply_to 3}
2024-03-02 13:37:54,141{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:echo	"Please echo 29"
2024-03-02 13:37:54,144{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:echo	{:type "echo_ok", :echo "Please echo 29", :msg_id 5, :in_reply_to 4}
2024-03-02 13:37:54,355{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 93"
2024-03-02 13:37:54,357{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:type "echo_ok", :echo "Please echo 93", :msg_id 4, :in_reply_to 3}
2024-03-02 13:37:54,617{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:echo	"Please echo 1"
2024-03-02 13:37:54,621{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:echo	{:type "echo_ok", :echo "Please echo 1", :msg_id 5, :in_reply_to 4}
2024-03-02 13:37:54,798{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:echo	"Please echo 50"
2024-03-02 13:37:54,800{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:echo	{:type "echo_ok", :echo "Please echo 50", :msg_id 3, :in_reply_to 2}
2024-03-02 13:37:55,146{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 72"
2024-03-02 13:37:55,148{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:type "echo_ok", :echo "Please echo 72", :msg_id 5, :in_reply_to 4}
2024-03-02 13:37:55,253{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:echo	"Please echo 0"
2024-03-02 13:37:55,256{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:echo	{:type "echo_ok", :echo "Please echo 0", :msg_id 4, :in_reply_to 3}
2024-03-02 13:37:55,482{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:echo	"Please echo 4"
2024-03-02 13:37:55,485{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:echo	{:type "echo_ok", :echo "Please echo 4", :msg_id 5, :in_reply_to 4}
2024-03-02 13:37:55,761{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:echo	"Please echo 0"
2024-03-02 13:37:55,764{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:echo	{:type "echo_ok", :echo "Please echo 0", :msg_id 6, :in_reply_to 5}
2024-03-02 13:37:55,997{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 66"
2024-03-02 13:37:56,000{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:type "echo_ok", :echo "Please echo 66", :msg_id 6, :in_reply_to 5}
2024-03-02 13:37:56,236{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:echo	"Please echo 20"
2024-03-02 13:37:56,239{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:echo	{:type "echo_ok", :echo "Please echo 20", :msg_id 4, :in_reply_to 3}
2024-03-02 13:37:56,463{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:echo	"Please echo 103"
2024-03-02 13:37:56,466{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:echo	{:type "echo_ok", :echo "Please echo 103", :msg_id 7, :in_reply_to 6}
2024-03-02 13:37:56,581{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 101"
2024-03-02 13:37:56,584{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:type "echo_ok", :echo "Please echo 101", :msg_id 7, :in_reply_to 6}
2024-03-02 13:37:56,610{GMT}	INFO	[jepsen test runner] jepsen.core: Run complete, writing
2024-03-02 13:37:56,646{GMT}	INFO	[jepsen node n3] maelstrom.db: Tearing down n3
2024-03-02 13:37:56,646{GMT}	INFO	[jepsen node n4] maelstrom.db: Tearing down n4
2024-03-02 13:37:56,646{GMT}	INFO	[jepsen node n1] maelstrom.db: Tearing down n1
2024-03-02 13:37:56,646{GMT}	INFO	[jepsen node n2] maelstrom.db: Tearing down n2
2024-03-02 13:37:56,647{GMT}	INFO	[jepsen node n5] maelstrom.db: Tearing down n5
2024-03-02 13:37:58,573{GMT}	INFO	[jepsen node n1] maelstrom.net: Shutting down Maelstrom network
2024-03-02 13:37:58,576{GMT}	INFO	[jepsen test runner] jepsen.core: Analyzing...
2024-03-02 13:37:58,817{GMT}	INFO	[jepsen test runner] jepsen.core: Analysis complete
2024-03-02 13:37:58,821{GMT}	INFO	[jepsen results] jepsen.store: Wrote /Users/lihaoyang/maelstrom/store/echo/20240302T133750.594+0800/results.edn
2024-03-02 13:37:58,852{GMT}	INFO	[jepsen test runner] jepsen.core: {:perf {:latency-graph {:valid? true},
        :rate-graph {:valid? true},
        :valid? true},
 :timeline {:valid? true},
 :exceptions {:valid? true},
 :stats {:valid? true,
         :count 23,
         :ok-count 23,
         :fail-count 0,
         :info-count 0,
         :by-f {:echo {:valid? true,
                       :count 23,
                       :ok-count 23,
                       :fail-count 0,
                       :info-count 0}}},
 :availability {:valid? true, :ok-fraction 1.0},
 :net {:all {:send-count 56,
             :recv-count 56,
             :msg-count 56,
             :msgs-per-op 2.4347825},
       :clients {:send-count 56, :recv-count 56, :msg-count 56},
       :servers {:send-count 0,
                 :recv-count 0,
                 :msg-count 0,
                 :msgs-per-op 0.0},
       :valid? true},
 :workload {:valid? true, :errors ()},
 :valid? true}


Everything looks good! ヽ(‘ー`)ノ
