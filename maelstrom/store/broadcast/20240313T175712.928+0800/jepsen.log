2024-03-13 17:57:12,988{GMT}	INFO	[jepsen test runner] jepsen.core: Command line:
lein run test -w broadcast --bin broadcast.rb --time-limit 5 --rate 10
2024-03-13 17:57:13,035{GMT}	INFO	[jepsen test runner] jepsen.core: Running test:
{:args []
 :remote
 #jepsen.control.retry.Remote{:remote #jepsen.control.scp.Remote{:cmd-remote #jepsen.control.sshj.SSHJRemote{:concurrency-limit 6,
                                                                                                             :conn-spec nil,
                                                                                                             :client nil,
                                                                                                             :semaphore nil},
                                                                 :conn-spec nil},
                              :conn nil}
 :log-net-send false
 :node-count nil
 :availability nil
 :max-txn-length 4
 :concurrency 5
 :db
 #object[maelstrom.db$db$reify__16142
         "0x30769e7a"
         "maelstrom.db$db$reify__16142@30769e7a"]
 :max-writes-per-key 16
 :leave-db-running? false
 :name "broadcast"
 :logging-json? false
 :start-time
 #object[org.joda.time.DateTime "0xff7042c" "2024-03-13T17:57:12.928+08:00"]
 :nemesis-interval 10
 :net
 #object[maelstrom.net$jepsen_net$reify__15251
         "0xb917b5e"
         "maelstrom.net$jepsen_net$reify__15251@b917b5e"]
 :client
 #object[maelstrom.workload.broadcast$client$reify__16644
         "0x5126c0cd"
         "maelstrom.workload.broadcast$client$reify__16644@5126c0cd"]
 :barrier
 #object[java.util.concurrent.CyclicBarrier
         "0x6c1e2161"
         "java.util.concurrent.CyclicBarrier@6c1e2161"]
 :log-stderr false
 :pure-generators true
 :ssh {:dummy? true}
 :rate 10.0
 :checker
 #object[jepsen.checker$compose$reify__11881
         "0x5b7f9eaa"
         "jepsen.checker$compose$reify__11881@5b7f9eaa"]
 :argv
 ("test"
  "-w"
  "broadcast"
  "--bin"
  "broadcast.rb"
  "--time-limit"
  "5"
  "--rate"
  "10")
 :nemesis
 (jepsen.nemesis.ReflCompose
  {:fm {:start-partition 0,
        :stop-partition 0,
        :kill 1,
        :start 1,
        :pause 1,
        :resume 1},
   :nemeses [#unprintable "jepsen.nemesis.combined$partition_nemesis$reify__16416@5b344510"
             #unprintable "jepsen.nemesis.combined$db_nemesis$reify__16397@3c73d613"]})
 :nodes ["n1" "n2" "n3" "n4" "n5"]
 :test-count 1
 :latency {:mean 0, :dist :constant}
 :bin "broadcast.rb"
 :generator
 ((jepsen.generator.Synchronize
   {:gen (jepsen.generator.TimeLimit
          {:limit 5000000000,
           :cutoff nil,
           :gen (jepsen.generator.Any
                 {:gens [(jepsen.generator.OnThreads
                          {:f #{:nemesis},
                           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                                   "0x2b960c2b"
                                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@2b960c2b"],
                           :gen nil})
                         (jepsen.generator.OnThreads
                          {:f #jepsen.generator.context.AllBut{:element :nemesis},
                           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                                   "0x46f32536"
                                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@46f32536"],
                           :gen (jepsen.generator.Stagger
                                 {:dt 200000000,
                                  :next-time nil,
                                  :gen (jepsen.generator.Mix
                                        {:i 1,
                                         :gens [({:f :broadcast, :value 0}
                                                 {:f :broadcast, :value 1}
                                                 {:f :broadcast, :value 2}
                                                 {:f :broadcast, :value 3}
                                                 {:f :broadcast, :value 4}
                                                 {:f :broadcast, :value 5}
                                                 {:f :broadcast, :value 6}
                                                 {:f :broadcast, :value 7}
                                                 ...)
                                                ({:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 ...)]})})})]})})})
  (jepsen.generator.Synchronize
   {:gen (jepsen.generator.OnThreads
          {:f #{:nemesis},
           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                   "0x6921e251"
                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@6921e251"],
           :gen ()})})
  (jepsen.generator.Synchronize
   {:gen {:type :log, :value "Waiting for recovery..."}})
  (jepsen.generator.Synchronize {:gen {:type :sleep, :value 10}})
  (jepsen.generator.Synchronize
   {:gen (jepsen.generator.OnThreads
          {:f #jepsen.generator.context.AllBut{:element :nemesis},
           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                   "0x724d4c0a"
                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@724d4c0a"],
           :gen (jepsen.generator.EachThread
                 {:fresh-gen {:f :read, :final? true},
                  :context-filters #object[clojure.core$promise$reify__8591
                                           "0x2d481de0"
                                           {:status :pending, :val nil}],
                  :gens {}})})}))
 :log-net-recv false
 :os
 #object[maelstrom.net$jepsen_os$reify__15254
         "0xfd9512f"
         "maelstrom.net$jepsen_os$reify__15254@fd9512f"]
 :time-limit 5
 :workload :broadcast
 :consistency-models [:strict-serializable]
 :topology :grid}

2024-03-13 17:57:14,016{GMT}	INFO	[jepsen node n1] maelstrom.net: Starting Maelstrom network
2024-03-13 17:57:14,017{GMT}	INFO	[jepsen test runner] jepsen.db: Tearing down DB
2024-03-13 17:57:14,018{GMT}	INFO	[jepsen test runner] jepsen.db: Setting up DB
2024-03-13 17:57:14,018{GMT}	INFO	[jepsen node n3] maelstrom.db: Setting up n3
2024-03-13 17:57:14,018{GMT}	INFO	[jepsen node n5] maelstrom.db: Setting up n5
2024-03-13 17:57:14,018{GMT}	INFO	[jepsen node n4] maelstrom.db: Setting up n4
2024-03-13 17:57:14,018{GMT}	INFO	[jepsen node n2] maelstrom.db: Setting up n2
2024-03-13 17:57:14,018{GMT}	INFO	[jepsen node n3] maelstrom.process: launching broadcast.rb []
2024-03-13 17:57:14,019{GMT}	INFO	[jepsen node n5] maelstrom.process: launching broadcast.rb []
2024-03-13 17:57:14,019{GMT}	INFO	[jepsen node n2] maelstrom.process: launching broadcast.rb []
2024-03-13 17:57:14,019{GMT}	INFO	[jepsen node n4] maelstrom.process: launching broadcast.rb []
2024-03-13 17:57:14,020{GMT}	INFO	[jepsen node n1] maelstrom.service: Starting services: (lin-kv lin-tso lww-kv seq-kv)
2024-03-13 17:57:14,020{GMT}	INFO	[jepsen node n1] maelstrom.db: Setting up n1
2024-03-13 17:57:14,021{GMT}	INFO	[jepsen node n1] maelstrom.process: launching broadcast.rb []
2024-03-13 17:57:15,029{GMT}	INFO	[jepsen node n1] maelstrom.net: Shutting down Maelstrom network
2024-03-13 17:57:15,030{GMT}	WARN	[jepsen test runner] jepsen.core: Test crashed!
java.io.IOException: Cannot run program "/Users/lihaoyang/maelstrom/broadcast.rb" (in directory "/var/folders/60/v6pr_mk57rzbw66lzrvrc7xh0000gn/T"): error=2, No such file or directory
	at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1170)
	at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1089)
	at maelstrom.process$start_node_BANG_.invokeStatic(process.clj:199)
	at maelstrom.process$start_node_BANG_.invoke(process.clj:168)
	at maelstrom.db$db$reify__16142.setup_BANG_(db.clj:34)
	at jepsen.db$fn__8729$G__8723__8733.invoke(db.clj:12)
	at jepsen.db$fn__8729$G__8722__8738.invoke(db.clj:12)
	at clojure.core$partial$fn__5908.invoke(core.clj:2642)
	at jepsen.control$on_nodes$fn__8599.invoke(control.clj:314)
	at clojure.lang.AFn.applyToHelper(AFn.java:154)
	at clojure.lang.AFn.applyTo(AFn.java:144)
	at clojure.core$apply.invokeStatic(core.clj:667)
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1990)
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1990)
	at clojure.lang.RestFn.applyTo(RestFn.java:142)
	at clojure.core$apply.invokeStatic(core.clj:671)
	at clojure.core$bound_fn_STAR_$fn__5818.doInvoke(core.clj:2020)
	at clojure.lang.RestFn.invoke(RestFn.java:408)
	at dom_top.core$real_pmap_helper$build_thread__211$fn__212.invoke(core.clj:163)
	at clojure.lang.AFn.applyToHelper(AFn.java:152)
	at clojure.lang.AFn.applyTo(AFn.java:144)
	at clojure.core$apply.invokeStatic(core.clj:667)
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1990)
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1990)
	at clojure.lang.RestFn.invoke(RestFn.java:425)
	at clojure.lang.AFn.applyToHelper(AFn.java:156)
	at clojure.lang.RestFn.applyTo(RestFn.java:132)
	at clojure.core$apply.invokeStatic(core.clj:671)
	at clojure.core$bound_fn_STAR_$fn__5818.doInvoke(core.clj:2020)
	at clojure.lang.RestFn.invoke(RestFn.java:397)
	at clojure.lang.AFn.run(AFn.java:22)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.io.IOException: error=2, No such file or directory
	at java.base/java.lang.ProcessImpl.forkAndExec(Native Method)
	at java.base/java.lang.ProcessImpl.<init>(ProcessImpl.java:295)
	at java.base/java.lang.ProcessImpl.start(ProcessImpl.java:225)
	at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1126)
	... 31 common frames omitted
